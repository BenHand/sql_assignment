Normal Mode

1) How many users are there?
2) What are the 5 most expensive items?
3) What’s the cheapest book? (Does that change for “category is exactly ‘book’”
   versus “category contains ‘book’”?)
4) Who lives at “6439 Zetta Hills, Willmouth, WY”? Do they have another address?
5) Correct Virginie Mitchell’s address to “New York, NY, 10108”.
6) How much would it cost to buy one of each tool?
7) How many total items did we sell?
8) How much was spent on books?
9) Simulate buying an item by inserting a User for yourself and an Order for that
    User.
----------------------------

1) 50 # of users  sqlite> SELECT * FROM users;

2)  5 most expensive items:

  sqlite> SELECT * FROM items ORDER BY price DESC;

    25|Small Cotton Gloves|Automotive, Shoes & Beauty|Multi-layered modular service-  desk|9984
    83|Small Wooden Computer|Health|Re-engineered fault-tolerant adapter|9859
    100|Awesome Granite Pants|Toys & Books|Upgradable 24/7 access|9790
    40|Sleek Wooden Hat|Music & Baby|Quality-focused heuristic info-mediaries|9390
    60|Ergonomic Steel Car|Books & Outdoors|Enterprise-wide secondary firmware|9341

3) cheapest book whether category contains or is only book

  sqlite> SELECT * FROM items WHERE category  ORDER BY price DESC;

  76|Ergonomic Granite Chair|Books|De-engineered bi-directional portal|1496

4)
    40|Corrine|Little|rubie_kovacek@grimes.net
    40|54369 Wolff Forges|Lake Bryon|CA|31587

5) sqlite> UPDATE addresses SET city = 'New York', state = 'NY', zip = '10108' WHERE user_id = '39';

      id|user_id|street|city|state|zip
      41|39|12263 Jake Crossing|New York|NY|10108
      42|39|83221 Mafalda Canyon|New York|NY|10108

6) sqlite> SELECT sum(price) FROM items WHERE category LIKE '%tool%';

      $46,477

7) sqlite> SELECT sum(quantity) FROM orders;

      2,125 items

8) sqlite> SELECT sum(price*quantity) FROM orders JOIN items ON orders.item_id = items.id WHERE category LIKE '%book%';

      $1,081,352 ?!

9) sqlite> SELECT * FROM users LIMIT(1);
          id|first_name|last_name|email
   sqlite> INSERT INTO users (id, first_name, last_name, email) VALUES (51, 'Ben', 'Hand', 'gneeshot@gmail.com');

  sqlite> SELECT * FROM orders LIMIT(1);
            id|user_id|item_id|quantity|created_at
  sqlite> INSERT INTO orders (id, user_id, item_id, quantity, created_at) VALUES (378, 51, 2, 32, '14:48:00.307668');

  ------------------------------------
  Hard Mode

1) What item was ordered most often? Grossed the most money?
2) What user spent the most?
3) What were the top 3 highest grossing categories?

  -------------------------------------

1) sqlite> SELECT item_id, sum(quantity) AS totalnumordered FROM orders GROUP BY item_id ORDER BY totalnumordered DESC LIMIT(1);   65|72

most ordered:
  65|Incredible Granite Car|Music, Sports & Clothing|Virtual bi-directional alliance|7295

  sqlite> SELECT * FROM orders JOIN items ON orders.item_id = items.id GROUP BY item_id ORDER BY quantity DESC LIMIT 10;
grossed most: Fantastic Wooden Chair

2) same command to find most spent. and thats who
id          first_name  last_name   email
----------  ----------  ----------  ------------------
51          Ben         Hand        gneeshot@gmail.com


3) sqlite> SELECT * FROM orders JOIN items ON orders.item_id = items.id GROUP BY category ORDER BY quantity DESC LIMIT 4;

  Computers, 'Beauty, toys & sports', Games


